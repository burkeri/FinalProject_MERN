{"version":3,"sources":["utils/API.js","pages/NoMatch.js","components/Login.js","components/Register.js","components/Profile.js","pages/Landing.js","pages/Dashboard.js","components/GoalForm/index.js","pages/Details.js","pages/AddGoalCreate.js","App.js","index.js"],"names":["API","getGoals","username","axios","get","createGoal","goalData","post","updateGoal","id","put","deleteGoal","delete","NoMatch","react_default","a","createElement","Container","fluid","Row","Col","size","className","role","aria-label","Login","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","md","xs","Form","action","method","FormGroup","Label","for","Input","type","name","Button","Component","Register","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","email","password","password2","dob","formErrors","registered","handleInputChange","event","_event$target","target","setState","defineProperty","handleFormSumbit","preventDefault","newUser","then","_ref","data","msg","_this$state","onChange","map","formError","success","onClick","Profile","Landing","material_icons_react_default","icon","Link","to","Dashboard","modal","goalID","goalProg","goalNote","toggleModal","prevState","closeModal","console","log","handleUpdateChoice","prog","handleUpdateProgress","progress","note","response","props","catch","err","handleDeleteBook","_this2","Card","CardBody","CardText","ListGroup","goals","goal","ListGroupItem","_id","ListGroupItemHeading","handleUserChoice","close","color","frequency","description","Progress","max","notes","createdAt","body","Modal","isOpen","ModalHeader","ModalBody","placeholder","rows","ModalFooter","GoalForm","userChoiceID","category","userChoiceGoal","toString","handleChoice","choice","handleIconChange","handleSubmit","userID","parseInt","fonticonpicker_react_default","icons","theme","renderUsing","closeOnSelect","isMulti","FormText","Details","components_GoalForm","AddGoalCreate","App","res","goalIndex","indexOf","BrowserRouter","Switch","Route","exact","path","component","render","pages_AddGoalCreate","pages_Dashboard","pages_Details","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a17c3a46.chunk.js","sourcesContent":["// // dependencies\nimport axios from \"axios\";\n\nexport default {\n    // get all the goals of the user\n    getGoals: username => {\n        return axios.get(\"api/goal/\" + username);\n    },\n\n    // save a goal to the database\n    createGoal: goalData => {\n        return axios.post(\"/api/goal\", goalData);\n    },\n    // update a goal's progress w/ the matching ID\n    // updateProgress: (id, prog) => {\n    //     return axios.put(\"/api/goal/\" + id + \"/\" + prog);\n    // },\n    // update a goal w/ the matching ID\n    updateGoal: (id, goalData) => {\n        return axios.put(\"api/goal/\" + id, goalData);\n    },\n    // delete a goal with the matching ID\n    deleteGoal: id => {\n        return axios.delete(\"/api/goal/\" + id);\n    }\n};\n","import React from \"react\";\nimport { Col, Row, Container } from \"reactstrap\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <div className=\"jumbotron mt-2\">\n            <h1 className=\"text-center\">404 Page Not Found</h1>\n            <h1 className=\"text-center\">\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;","import React, { Component } from \"react\";\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./login.css\";\n\nexport class Login extends Component {\n  render() {\n    return (\n      <Container id=\"loginBackground\">\n        <Row>\n          <Col md=\"6\" xs=\"10\" id=\"formContainer\">\n            <Form action=\"/user/login\" method=\"POST\">\n              <FormGroup>\n                <Label for=\"usernameLogin\">Username</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"usernameLogin\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"passwordLogin\">Password</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"passwordLogin\"\n                />\n              </FormGroup>\n              <Button id=\"formButton\" type=\"submit\">Login</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport \"./register.css\";\n\nexport class Register extends Component {\n  state = {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    dob: \"\",\n    formErrors: [\"\"],\n    registered: [\"\"]\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSumbit = event => {\n    event.preventDefault();\n    this.setState({ formErrors: [\"\"] });\n    const newUser = {\n      name: this.state.name,\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      dob: this.state.dob\n    };\n    axios.post(\"/user/register\", newUser).then(({ data }) =>\n      { if (data[1].msg === \"You are now registered! Please login.\") {\n          this.setState({\n            registered: data\n          });\n      }\n      else {\n        this.setState({\n          formErrors: data\n        })\n      }\n    });\n  };\n\n  render() {\n\n    const { formErrors, registered } = this.state;\n\n    return (\n      <Container>\n        <Row>\n          <Col md=\"6\" xs=\"10\" id=\"formContainer\">\n            <Form action=\"/user/register\" method=\"POST\">\n              <FormGroup>\n                <Label for=\"nameReg\">Name</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"nameReg\"\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"usernameReg\">Username</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"usernameReg\"\n                  value={this.state.username}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"emailReg\">Email</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"emailReg\"\n                  value={this.state.email}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"dobReg\">Date of Birth</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"date\"\n                  name=\"dob\"\n                  id=\"dobReg\"\n                  value={this.state.dob}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"passwordReg\">Password</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"passwordReg\"\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"confirmPasswordReg\">Confirm Password</Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"password\"\n                  name=\"password2\"\n                  id=\"confirmPasswordReg\"\n                  value={this.state.password2}\n                  onChange={this.handleInputChange}\n                />\n              </FormGroup>\n\n              {formErrors.length > 1 &&\n                formErrors.map(formError => (\n                  <div\n                    className=\"alert alert-danger alert-dismissible fade show\"\n                    role=\"alert\"\n                  >\n                    {formError.msg}\n                  </div>\n                ))}\n\n              {registered.length > 1 &&\n                registered.map(success => (\n                  <div\n                    className=\"alert alert-success alert-dismissible fade show\"\n                    role=\"alert\"\n                  >\n                    {success.msg}\n                  </div>\n                ))}\n\n              <Button\n                id=\"formButton\"\n                type=\"submit\"\n                onClick={this.handleFormSumbit}\n              >\n                Register\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react'\n\nexport class Profile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Welcome, </h1>\n      </div>\n    )\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Container, Col, Row, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport MaterialIcon from \"material-icons-react\";\nimport \"./landing.css\";\n\n// Landing component\nfunction Landing() {\n    return (\n        <Container className=\"landingBackground\">\n            <Row>\n                <Col size=\"md-12\">\n                    <h1 id=\"title\">LifeSet</h1>\n                    <MaterialIcon icon=\"check_circle\" id=\"logoIcon\" />\n                    <Link to=\"/user/register\">\n                        <Button id=\"signIn\">Sign Up</Button>\n                    </Link>\n                    <Link to=\"/user/login\">\n                        <Button id=\"signUp\">Sign In</Button>\n                    </Link>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\n// style\nimport \"./dashboard.css\";\n// reactstrap components\nimport MaterialIcon from \"material-icons-react\";\nimport {\n    Container,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    CardText,\n    Form,\n    Label,\n    Button,\n    Input,\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    Progress,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter\n} from \"reactstrap\";\n\nclass Dashboard extends Component {\n    state = {\n        modal: false,\n        goalID: \"\",\n        goalProg: 0,\n        goalNote: \"\"\n    };\n\n    // Opens the modal\n    toggleModal = () => {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    };\n\n    // Will reset the user goal choice state and close the modal\n    closeModal = () => {\n        this.setState(\n            {\n                goalID: \"\",\n                goalProg: 0,\n                goalNote: \"\"\n            },\n            () => {\n                console.log(`Dashboard State updated:`);\n                console.log(this.state);\n                this.toggleModal();\n            }\n        );\n    };\n\n    // Updates the values in the form inputs\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    // Updates the state of the user's goal choice to update\n    // and brings up the modal to add a note or just finish\n    handleUpdateChoice = (id, prog) => {\n        this.setState(\n            {\n                goalID: id,\n                goalProg: prog\n            },\n            () => {\n                console.log(`Dashboard State updated:`);\n                console.log(this.state);\n                this.toggleModal();\n            }\n        );\n    };\n\n    // Updates the progress and adds a note to the DB\n    // Then refresh the goals\n    handleUpdateProgress = () => {\n        const { goalID, goalProg, goalNote } = this.state;\n\n        const goalData = {\n            progress: goalProg + 1,\n            note: goalNote\n        };\n        // console.log(goalID);\n        // console.log(goalData);\n\n        API.updateGoal(goalID, goalData)\n            // Update the goals state in App and close the modal\n            .then(response => {\n                this.props.getGoals(this.props.username);\n                this.toggleModal();\n            })\n            .catch(err => console.log(err));\n    };\n\n    // Deletes the chosen goal from the DB and refreshes the goals\n    handleDeleteBook = id => {\n        // console.log(`Goal ID to delete: ${id}`);\n        API.deleteGoal(id)\n            .then(response => this.props.getGoals(this.props.username))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <Container className=\"dashBackground\">\n                {/* Row for the dropdown menu */}\n                {/* <Row>\n                    <Col xs={{ size: \"auto\", offset: 10 }}>\n                        <Dropdown\n                            isOpen={this.state.dropdownOpen}\n                            toggle={this.toggle}\n                            className=\"mt-2\"\n                        >\n                            <DropdownToggle className=\"bg-danger\">\n                                =\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem header>App Name</DropdownItem>\n                                <DropdownItem>Edit Goal</DropdownItem>\n                                <DropdownItem>Stats</DropdownItem>\n                                <DropdownItem divider />\n                                <DropdownItem href=\"/user/logout\">\n                                    Logout\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </Dropdown>\n                    </Col>\n                </Row> */}\n\n                {/* Main Image and Name */}\n                <Row className=\"header\">\n                    <Col>\n                        <h1 className=\"text-center\" id=\"welcomeUser\">\n                            Hello, {this.props.username}\n                        </h1>\n                        <div id=\"profilePic\">\n                            <MaterialIcon\n                                icon=\"account_circle\"\n                                id=\"profileIcon\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* Social Ticker */}\n                <Row>\n                    <Col>\n                        <Card id=\"ticker\">\n                            <CardBody>\n                                <CardText>\n                                    {/* <h3 id=\"text\">\n                                        \"If you want to accomplish the goals of\n                                        your life, you have to begin with the\n                                        spirit.\"\n                                    </h3>\n                                    <br />\n                                    <hr />\n                                    <br />\n                                    <h3>Oprah Winfrey</h3> */}\n                                    <Button>Social!</Button>\n                                </CardText>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n\n                {/* Goal header and button */}\n                <Row id=\"goalHeader\">\n                    <Col>\n                        <p className=\"text-center\">Goals:</p>\n                        <hr />\n                        <div className=\"text-center mb-2\">\n                            <Link to=\"/addgoalcreate\">\n                                <Button id=\"addGoal\">Add Goal</Button>\n                            </Link>\n                        </div>\n                    </Col>\n                </Row>\n\n                {/* Goal list */}\n                <Row>\n                    <Col>\n                        <ListGroup>\n                            {this.props.goals.map(goal => (\n                                <ListGroupItem key={goal._id} id=\"goalItem\">\n                                    <ListGroupItemHeading>\n                                        <Link to=\"/details\">\n                                            <Button\n                                                id=\"goalIcon\"\n                                                onClick={() =>\n                                                    this.props.handleUserChoice(\n                                                        goal._id\n                                                    )\n                                                }\n                                            >\n                                                <i className={goal.icon} />\n                                            </Button>\n                                        </Link>\n                                        {goal.name}\n                                        <Button\n                                            close\n                                            color=\"danger\"\n                                            className=\"float-right\"\n                                            onClick={() =>\n                                                this.handleDeleteBook(goal._id)\n                                            }\n                                        />\n                                    </ListGroupItemHeading>\n                                    <div>\n                                        <p>\n                                            Frequency: {goal.frequency} times\n                                            per week\n                                        </p>\n                                        <p>Description: {goal.description}</p>\n                                        <p>Progress:</p>\n                                        <div className=\"text-center\">\n                                            {goal.progress} of {goal.frequency}\n                                        </div>\n                                        <Progress\n                                            id=\"progressBar\"\n                                            value={goal.progress}\n                                            max={goal.frequency}\n                                        />\n                                        <br />\n                                        {goal.notes.length > 0 && (\n                                            <div>\n                                                <p>Notes:</p>\n                                                <ul>\n                                                    {goal.notes.map(note => (\n                                                        <li key={note._id}>\n                                                            {note.createdAt}:{\" \"}\n                                                            {note.body}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                        )}\n                                    </div>\n                                    <br />\n                                    <Button\n                                        id=\"finishGoal\"\n                                        onClick={() =>\n                                            this.handleUpdateChoice(\n                                                goal._id,\n                                                goal.progress\n                                            )\n                                        }\n                                    >\n                                        Finish\n                                    </Button>\n                                </ListGroupItem>\n                            ))}\n                        </ListGroup>\n                    </Col>\n                </Row>\n\n                {/* Modal content */}\n                <Modal isOpen={this.state.modal}>\n                    <ModalHeader>Great job! You made progress!</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <Label for=\"goalNote\">\n                                Why not make a note of the occasion? (optional)\n                            </Label>\n                            <Input\n                                id=\"goalNote\"\n                                name=\"goalNote\"\n                                type=\"textarea\"\n                                placeholder=\"How you feel afterwards? Etc...\"\n                                value={this.state.goalNote}\n                                onChange={this.handleInputChange}\n                                rows={4}\n                            />\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button\n                            id=\"finishGoal\"\n                            onClick={this.handleUpdateProgress}\n                        >\n                            Finish\n                        </Button>{\" \"}\n                        <Button color=\"warning\" onClick={this.closeModal}>\n                            Cancel\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </Container>\n        );\n    }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport API from \"../../utils/API\";\nimport FontIconPicker from \"@fonticonpicker/react-fonticonpicker\";\nimport \"@fonticonpicker/react-fonticonpicker/dist/fonticonpicker.base-theme.react.css\";\nimport \"@fonticonpicker/react-fonticonpicker/dist/fonticonpicker.material-theme.react.css\";\nimport \"./createGoalForm.css\";\n\nclass GoalForm extends Component {\n    state = {\n        userChoiceID: this.props.userChoiceID || \"\",\n        username: this.props.username || \"\",\n        category: this.props.userChoiceGoal.category || \"\",\n        name: this.props.userChoiceGoal.name || \"\",\n        icon: this.props.userChoiceGoal.icon || \"\",\n        frequency: this.props.userChoiceGoal.frequency.toString() || \"0\",\n        description: this.props.userChoiceGoal.description || \"\"\n    };\n\n    componentWillMount() {\n        // console.log(`Goal form props:`);\n        // console.log(this.props);\n        console.log(`Goal form state:`);\n        console.log(this.state);\n    }\n\n    // updates the choice between mind/spirit/body\n    handleChoice = choice => {\n        // update the state\n        this.setState({ category: choice });\n    };\n\n    // updates the values in the form inputs\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    };\n\n    handleIconChange = icon => {\n        // console.log(`Current icon: ${this.state.icon}`);\n        // console.log(`Selected icon: ${icon}`);\n        this.setState({ icon: icon });\n    };\n\n    // runs the code after the submit button is clicked\n    handleSubmit = event => {\n        const {\n            userChoiceID,\n            category,\n            name,\n            icon,\n            frequency,\n            description,\n            username\n        } = this.state;\n\n        const goalData = {\n            userID: username,\n            category: category,\n            name: name,\n            icon: icon,\n            frequency: parseInt(frequency),\n            description: description\n        };\n\n        this.state.userChoiceID.length > 0\n            ? API.updateGoal(userChoiceID, goalData).then(() => this.props.getGoals(this.props.username)).catch(err => console.log(err))\n            : API.createGoal(goalData).then(() => this.props.getGoals(this.props.username)).catch(err => console.log(err))\n    };\n\n    render() {\n        const iconPack = [\n            \"far fa-angry\",\n            \"fas fa-archive\",\n            \"fas fa-ban\",\n            \"fas fa-baseball-ball\",\n            \"fas fa-bed\",\n            \"fas fa-beer\",\n            \"fas fa-bell\",\n            \"fas fa-bible\",\n            \"fas fa-bicycle\",\n            \"fas fa-bone\",\n            \"fas fa-book\",\n            \"fas fa-brain\",\n            \"fas fa-bread-slice\",\n            \"fas fa-broom\",\n            \"fas fa-brush\",\n            \"fas fa-bus\",\n            \"fas fa-calculator\",\n            \"fas fa-calendar-alt\",\n            \"fas fa-camera-retro\",\n            \"fas fa-capsules\",\n            \"fas fa-car\",\n            \"fas fa-dumbbell\",\n            \"fab fa-facebook\",\n            \"fas fa-heart\",\n            \"fas fa-weight\",\n            \"fas fa-weight-hanging\"\n        ];\n        return (\n            <div id=\"createForm\">\n                {/* Button choice for type of goal */}\n                <p>What type of goal?</p>\n                <Button\n                    id=\"catBtn\"\n                    onClick={() => this.handleChoice(\"Spirit\")}\n                    className=\"mb-2\"\n                >\n                    Spirit\n                </Button>\n                <Button\n                    id=\"catBtn\"\n                    onClick={() => this.handleChoice(\"Mind\")}\n                    className=\"mb-2\"\n                >\n                    Mind\n                </Button>\n                <Button\n                    id=\"catBtn\"\n                    onClick={() => this.handleChoice(\"Body\")}\n                    className=\"mb-2\"\n                >\n                    Body\n                </Button>\n                <Form action=\"/dashboard\">\n                    {/* Input for goal name */}\n                    <FormGroup>\n                        <Label for=\"name\">Name:</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            placeholder=\"Goal name here...\"\n                            value={this.state.name}\n                            onChange={this.handleInputChange}\n                        />\n                    </FormGroup>\n                    {/* Input for icon */}\n                    <FormGroup>\n                        <Label for=\"icon\">Icon:</Label>\n                        <FontIconPicker\n                            icons={iconPack}\n                            theme=\"red\"\n                            renderUsing=\"class\"\n                            onChange={this.handleIconChange}\n                            value={this.state.icon}\n                            closeOnSelect={false}\n                            isMulti={false}\n                        />\n                    </FormGroup>\n                    {/* Input for frequency */}\n                    <FormGroup>\n                        <Label for=\"frequency\">Frequency:</Label>\n                        <Input\n                            type=\"select\"\n                            name=\"frequency\"\n                            id=\"frequency\"\n                            value={this.state.frequency}\n                            onChange={this.handleInputChange}\n                        >\n                            <option>Select</option>\n                            <option>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                            <option>6</option>\n                            <option>7</option>\n                        </Input>\n                        <FormText color=\"muted\">(per week)</FormText>\n                    </FormGroup>\n                    {/* Conditional Description textarea shows only if there's a userChoiceID */}\n                    {this.state.userChoiceID.length > 0 && (\n                        <FormGroup>\n                            <Label for=\"description\">Details/ Description:</Label>\n                            <Input\n                                type=\"textarea\"\n                                name=\"description\"\n                                id=\"description\"\n                                value={this.state.description}\n                                onChange={this.handleInputChange}\n                            />\n                        </FormGroup>\n                    )}\n                    <Link to=\"/dashboard\">\n                        <Button \n                            id=\"createBtn\" \n                            onClick={this.handleSubmit}\n                        >\n                            Submit\n                        </Button>\n                    </Link>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default GoalForm;\n","import React, { Component } from \"react\";\nimport { Container, Col } from \"reactstrap\";\nimport GoalForm from \"../components/GoalForm\";\nimport \"./createGoal.css\";\n// import API from '../utils/API';\n\nclass Details extends Component {\n\n    render() {\n        return (\n            <Container id=\"CGFbackground\">\n                <Col md=\"6\" xs=\"10\" id=\"formCont\">\n                    <h1>Edit a Goal:</h1>\n                    <small>(User Choice: {this.props.userChoiceID})</small>\n                    <GoalForm \n                        userChoiceID={this.props.userChoiceID}\n                        username={this.props.username}\n                        userChoiceGoal={this.props.userChoiceGoal}\n                        getGoals={this.props.getGoals}\n                    />\n                </Col>\n            </Container>\n        );\n    }\n}\n\nexport default Details;\n","import React, { Component } from \"react\";\nimport { Container, Col } from \"reactstrap\";\nimport GoalForm from \"../components/GoalForm\";\nimport \"./createGoal.css\";\n\nclass AddGoalCreate extends Component {\n    render() {\n        return (\n            <Container id=\"CGFbackground\">\n                <Col md=\"6\" xs=\"10\" id=\"formCont\">\n                    <h1>Create a Goal:</h1>\n                    <GoalForm\n                        userChoiceID={this.props.userChoiceID}\n                        username={this.props.username}\n                        userChoiceGoal={this.props.userChoiceGoal}\n                        getGoals={this.props.getGoals}\n                    />\n                </Col>\n            </Container>\n        );\n    }\n}\n\nexport default AddGoalCreate;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport API from \"./utils/API\";\n\n// style\nimport \"./App.css\";\n\n// components\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Landing from \"./pages/Landing\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Details from \"./pages/Details\";\nimport AddGoalCreate from \"./pages/AddGoalCreate\";\n\nclass App extends Component {\n    state = {\n        userChoiceID: \"\",\n        userChoiceGoal: {\n            name: \"\",\n            icon: \"\",\n            frequency: \"\",\n            description: \"\"\n        },\n        username: \"Mangoman42\",\n        goals: []\n    };\n\n    componentDidMount() {  \n        this.getGoals(this.state.username);\n    }\n    \n    getGoals = (username) => {\n        API.getGoals(username)\n            .then(res => {\n                this.setState(\n                    {\n                        goals: res.data\n                    },\n                    () => {\n                        console.log(`Goals state:`);\n                        console.log(this.state.goals);\n                    }\n                );\n            })\n            .catch(err => console.log(err));\n    };\n\n    handleUserChoice = id => {\n        const goalIndex = this.state.goals.map(goal => goal._id).indexOf(id);\n        // console.log(`Chosen goal's index: ${goalIndex}`);\n        this.setState({ \n            userChoiceID: id,\n            userChoiceGoal: this.state.goals[goalIndex]\n        });\n    };\n\n    render() {\n\n        return (\n            <Router>\n                <div>\n                    <Switch>\n                        <Route \n                            exact path=\"/user/login\" \n                            component={Login} \n                        />\n                        <Route\n                            exact path=\"/user/register\"\n                            component={Register}\n                        />\n                        <Route \n                            exact path=\"/user/profile\"\n                            component={Profile} \n                        />\n                        <Route\n                            exact path=\"/addgoalcreate\"\n                            render={() => (\n                                <AddGoalCreate\n                                    userChoiceID={this.state.userChoiceID}\n                                    username={this.state.username}\n                                    userChoiceGoal={this.state.userChoiceGoal}\n                                    getGoals={this.getGoals}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/dashboard\"\n                            render={() => (\n                                <Dashboard\n                                    onClick={this.handleUserChoice}\n                                    username={this.state.username}\n                                    goals={this.state.goals}\n                                    getGoals={this.getGoals}\n                                    handleUserChoice={this.handleUserChoice}\n                                />\n                            )}\n                        />\n                        <Route \n                            exact path=\"/details\" \n                            render={() => (\n                                <Details\n                                    userChoiceID={this.state.userChoiceID}\n                                    username={this.state.username}\n                                    userChoiceGoal={this.state.userChoiceGoal}\n                                    getGoals={this.getGoals}\n                                />\n                            )}\n                        />\n                        {/* Landing page and 404 */}\n                        <Route exact path=\"/\" component={Landing} />\n                        <Route component={NoMatch} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}